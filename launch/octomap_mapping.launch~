<!-- 
  Example launch file for octomap_server mapping: 
  Listens to incoming PointCloud2 data and incrementally builds an octomap. 
  The data is sent out in different representations. 

  Copy this file into your workspace and adjust as needed, see
  www.ros.org/wiki/octomap_server for details  
-->
<launch>
	<node pkg="octomap_server" type="octomap_server_node" name="octomap_server">
	
		<param name="resolution" value="0.1" />		
		<!-- fixed map frame (set to 'map' if SLAM or localization running!) -->
		<param name="frame_id" type="string" value="map" />		
		<!-- maximum range to integrate (speedup!) -->
		<param name="sensor_model/max_range" value="4.0" />
		
		<param name="latch" type="bool" value="false" />
		<param name="filter_ground" type="bool" value="false" />

		<param name="base_frame_id" type="string" value="/base_link" />
		<param name="point_cloud/max_z" value="5.0" />

		<!-- use this to manage the height of the obstacles projected to the 2D grid map -->
		<!--param name="occupancy_min_z" value="0.075" /-->
		<!--param name="occupancy_max_z" value="0.5" /-->

        <param name="publish_free_space" value="true" />
		
		<!-- data source to integrate (PointCloud2) -->
		<!--remap from="cloud_in" to="/kinect_camera/depth/points" /-->
		<remap from="cloud_in" to="/openni2_camera/depth/points_throttle" />
		<!--remap from="cloud_in" to="/openni2_camera/depth/points" /-->
	
	</node>
</launch>
